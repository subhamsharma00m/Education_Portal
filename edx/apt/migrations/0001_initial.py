# Generated by Django 2.1.1 on 2019-03-26 12:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Class', models.CharField(max_length=50)),
                ('subject', models.CharField(max_length=100)),
                ('topic', models.CharField(max_length=500)),
                ('file', models.FileField(upload_to='Assignment/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('username', models.CharField(max_length=50)),
                ('attend', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(500)])),
                ('totallecture', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(500)])),
            ],
        ),
        migrations.CreateModel(
            name='ContactModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=100)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ExamNumberModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Exam_Name', models.CharField(max_length=200)),
                ('username', models.CharField(max_length=50)),
                ('Subject1', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('Subject2', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('Subject3', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('Subject4', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('Subject5', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('Subject6', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('MaxMarks', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField()),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('mobile', models.PositiveIntegerField()),
                ('total_fee', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(30000), django.core.validators.MinValueValidator(0)])),
                ('deposite', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(30000), django.core.validators.MinValueValidator(0)])),
                ('Transport', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=128)),
                ('Father_name', models.CharField(blank=True, max_length=50)),
                ('Mother_name', models.CharField(blank=True, max_length=50)),
                ('parents_contact', models.PositiveIntegerField()),
                ('photo', models.FileField(upload_to='post_image')),
                ('Class', models.CharField(blank=True, choices=[('Class 1', 'Class 1'), ('Class 2', 'Class 2'), ('Class 3', 'Class 3'), ('Class 4', 'Class 4'), ('Class 5', 'Class 5'), ('Class 6', 'Class 6'), ('Class 7', 'Class 7'), ('Class 8', 'Class 8'), ('Class 9', 'Class 9'), ('Class 10', 'Class 10'), ('Class 11 Sc.', 'Class 11 Sc'), ('Class 11 Co.', 'Class 11 Co.'), ('Class 11 Art', 'Class 11 Art'), ('Class 12 Sc.', 'Class 12 Sc.'), ('Class 12 Co.', 'Class 12 Co.'), ('Class 12 Art', 'Class 12 Art')], max_length=50)),
                ('designation', models.CharField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('optionA', models.CharField(max_length=50)),
                ('optionB', models.CharField(max_length=50)),
                ('optionC', models.CharField(max_length=50)),
                ('optionD', models.CharField(max_length=50)),
                ('answer', models.CharField(max_length=50)),
                ('marks', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SignupModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('Email', models.EmailField(max_length=250, unique=True)),
                ('Password', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_id', models.CharField(max_length=50)),
                ('subname', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TestGiven',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_date', models.DateField()),
                ('exam_time', models.TimeField()),
                ('username', models.CharField(max_length=50)),
                ('subject_name', models.CharField(max_length=50)),
                ('topic_name', models.CharField(max_length=50)),
                ('total_question', models.IntegerField()),
                ('total_attempted', models.IntegerField()),
                ('total_correct', models.IntegerField()),
                ('total_incorrect', models.IntegerField()),
                ('marks_obtained', models.FloatField()),
                ('percent', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topicname', models.CharField(max_length=80)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apt.Subject')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='topics',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apt.Topics'),
        ),
    ]
